- content_for :page_title do
  = t('auth.register')

= simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f|
  = render 'shared/error_messages', object: resource

  = f.simple_fields_for :account do |ff|
    = ff.input :username, autofocus: true, placeholder: t('simple_form.labels.defaults.username'), required: true, input_html: { 'aria-label' => t('simple_form.labels.defaults.username') }

  = f.input :email, placeholder: t('simple_form.labels.defaults.email'), required: true, input_html: { 'aria-label' => t('simple_form.labels.defaults.email') }
  = f.input :password, autocomplete: "off", placeholder: t('simple_form.labels.defaults.password'), required: true, input_html: { 'aria-label' => t('simple_form.labels.defaults.password') }
  = f.input :password_confirmation, autocomplete: "off", placeholder: t('simple_form.labels.defaults.confirm_password'), required: true, input_html: { 'aria-label' => t('simple_form.labels.defaults.confirm_password') }

  .actions
    - if ENV['RECAPTCHA_ENABLED'] == 'true'
      %script(src='https://www.google.com/recaptcha/api.js')
      = f.button :button, t('auth.register'), type: :submit, id: 'registration-form',
        class: 'g-recaptcha',
        data: { sitekey: ENV['RECAPTCHA_SITE_KEY'], callback: 'on_submit_new_user' }
      :javascript
        function on_submit_new_user(token) {
          document.getElementById("new_user").submit();
        }
    - else
      = f.button :button, t('auth.register'), type: :submit

.form-footer= render "auth/shared/links"
